name: Calendar.yaml

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  build:

    # Name the Job
    name: Build and publish docker image
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log into docker
        run: docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: "./frontend"
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ghcr.io/dlike230/cis188-project/final-project-frontend:${{ github.sha }}

      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: "./backend"
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ghcr.io/dlike230/cis188-project/final-project-backend:${{ github.sha }}

  deploy:
    name: Deploy latest version of code
    if: github.ref == 'refs/heads/master'
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS configuration
        run: >
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }};
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: configure kube credentials on AWS
        run: aws eks --region us-east-1 update-kubeconfig --name cis188 --role-arn arn:aws:iam::474844133309:role/dlike --alias cis188

      - name: Set namespace
        run: kubectl config set-context --current --namespace=dlike

      - name: Set tag env variable
        run: export TAG=${{ github.sha }}

      - name: Run kubectl apply with substituted env vars
        run:  cat ./k8s/*.yaml | envsubst - | kubectl apply -f -

